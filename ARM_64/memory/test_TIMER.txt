module rom_case(out, address);
output reg [31:0] out;
input  [15:0] address; // address- 16 deep memory  
always @(address) begin
case (address)
16'h0000:  out = 32'b11010010100000000000000100001010; // MOVZ X10, 8
16'h0001:  out = 32'b11010011011000000111000101001010; // LSL X10, X10, 28
16'h0002:  out = 32'b11010010100000000000000000100001; // MOVZ X1, 1
16'h0003:  out = 32'b11111000000000000001000101000001; // STUR X1, [X10, #1]
16'h0004:  out = 32'b10001011000000010000001111100011; // ADD X3, XZR, X1
16'h0005:  out = 32'b10001011000000010000000000100011; // ADD X3, X1, X1
16'h0006:  out = 32'b10001011000000110000000000100100; // ADD X4, X1, X3
16'h0007:  out = 32'b11111000010000000000000101000110; // LDUR X6, [X10, #0]
16'h0008:  out = 32'b10001011000000110000000011000001; // ADD X1, X6, X3
16'h0009:  out = 32'b11110010100000000000000101000101; // MOVK X5, 10
default: out=32'hD60003E0; //BR XZR
endcase
end
endmodule