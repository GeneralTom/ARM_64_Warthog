/*      High instruction       ||       Low instruction       */
/*   4: LSL X8, X8, 0          ||   0:  MOVZ X8, 0            */
1101001101100000000000010000100011010010100000000000000000001000

/*  12: LSL X11, X11, 0        ||   8:  MOVZ X11, 8           */
110100110110000000110010110101111010010100000000000000100001011
/*  20: LSL X7, X7, 24         ||   16: MOVZ X7, 1            */
1101001101100000011000001110011111010010100000000000000000100111
/*  28: SUBI X0, XZR, 405      ||   24: STUR X7, [X8, 48]     */
1101000100000110010101111110000011111000000000110000000100000111
/*  36: ORRI X2, XZR, 281      ||   32: SUBI X5, XZR, 1024    */
1011001000000100011001111110001011010001000100000000001111100101
/*  44: ADD X0, X0, X5         ||   40: ADD, X2 X2, X5        */
1000101100000101000000000000000010001011000001010000000001000010
/*  52: ADD X2, X5, X2         ||   48: ADD X5, X5, X5        */
1000101100000010000000001010001010001011000001010000000010100101
/*  60: ADD X0, X0, X5         ||   56: LSL X5, X5, 1         */
1000101100000101000000000000000011010011011000000000010010100101
/*  68: ADD X2, X2, X5         ||   64: LSL X5, X5, 1         */
1000101100000101000000000100001011010011011000000000010010100101
/*  76: ADD X0, X0, X2         ||   72: SUB, X5, XZR, X5      */
1000101100000010000000000000000011001011000001010000001111100101
/*  84: STUR X0, [X8, 24]      ||   80: ADD, X0, X0, X2       */
1111100000000001100000010000000010001011000000100000000000000000
/*  92: STUR X5, [X8, 40]      ||   88: STUR X2, [X8, 32]     */
1111100000000010100000010000010111111000000000100000000100000010
/*  100: ANDI X1, XZR, 0       ||   96: ADDI X0, XZR, 0       */
1001001000000000000000111110000110010001000000000000001111100000
/*  108: ORRI X3, XZR, 0       ||   104: EORI X2, XZR, 0      */
1011001000000000000000111110001111010010000000000000001111100010
/*  116: AND X5, X31, X31      ||   112: ORR X4, X31, X31     */
1000101000011111000000111110010110101010000111110000001111100100
/*  124: LDUR X7, [X8, 48]     ||   120: AND X6, X31, X31     */
1111100001000011000000010000011110001010000111110000001111100110
/*  132: CBNZ X7, -2           ||   128: SUBI X7, X7, 1       */
1011010111111111111111111100011111010001000000000000010011100111
/*  140: SUBI X1, XZR, 1       ||   136: MOVZ, Z0, 65535      */
1101000100000000000001111110000111010010100111111111111111100000
/*  148: SUBI X3, XZR, 1       ||   144: MOVZ, X2, 65535      */
1101000100000000000001111110001111010010100111111111111111100010
/*  156: SUBI X5, XZR, 1       ||   152: MOVZ, X4, 65535      */
1101000100000000000001111110010111010010100111111111111111100100
/*  164: LDUR, X7, [X8, 48]    ||   160: SUBI X6, XZR, 1      */
1111100001000011000000010000011111010001000000000000011111100110
/*  172: CBNZ X7, -2           ||   168: SUBI X7, X7, 1       */
1011010111111111111111111100011111010001000000000000010011100111
/*  180: LDUR X2, [X8, 32]     ||   176: LDUR X4, [X8, 24]    */
1111100001000010000000010000001011111000010000011000000100000100
/*  188: ANDI X3, X2, 0        ||   184: LDUR X5, [X8, 40]    */
1001000100000000000000000100001111111000010000101000000100000101
/*  196: MOVZ X7, 8            ||   192: ORRI X3, X3, 64      */
1101001010000000000000010000011110110010000000010000000001100011
/*  204: MOVZ X7, 1            ||   200: SUB X3, X3, X7       */
1101001010000000000000000010011111001011000001110000000001100011
/*  212: SUB X1, X1, X5        ||   208: EOR X1, X3, X7       */
1100101100000101000000000010000111001010000001110000000001100001
/*  220: MOVZ X5, 0            ||   216: ORRI X0, X4, 0       */
1101001010000000000000000000010110110010000000000000000010000000
/*  228: LDUR X7, [X8, 48]     ||   224: MOVZ X6, 0           */
1111100001000011000000010000011111010010100000000000000000000110
/*  236: CBNZ X7, -2           ||   232: SUBI X7, X7, 1       */
1011010111111111111111111100011111010001000000000000010011100111
/*  244: BR X11                ||   240: BR X11               */
1101011000000000000000010110000011010110000000000000000101100000